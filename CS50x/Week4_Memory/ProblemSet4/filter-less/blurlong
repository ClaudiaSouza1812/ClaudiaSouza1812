

void blur(int height, int width, RGBTRIPLE image[height][width])
{
    RGBTRIPLE buffer[height][width];

    for (int i = 0; i < height; i++)
    {
        for (int j = 0; j < width; j++)
        {
            //first line, first pixel
            if (i == 0 && j == 0)
            {
                buffer[i][j].rgbtRed = round((image[i][j].rgbtRed +
                image[i][j+1].rgbtRed + image[i+1][j].rgbtRed +
                image[i+1][j+1].rgbtRed) / 4.0);

                buffer[i][j].rgbtGreen = round((image[i][j].rgbtGreen +
                image[i][j+1].rgbtGreen + image[i+1][j].rgbtGreen +
                image[i+1][j+1].rgbtGreen) / 4.0);

                buffer[i][j].rgbtBlue = round((image[i][j].rgbtBlue +
                image[i][j+1].rgbtBlue + image[i+1][j].rgbtBlue +
                image[i+1][j+1].rgbtBlue) / 4.0);
            }

            //first line, last pixel
            if (i == 0 && j == width - 1)
            {
                buffer[i][j].rgbtRed = round((image[i][j].rgbtRed +
                image[i][j-1].rgbtRed + image[i+1][j].rgbtRed +
                image[i+1][j-1].rgbtRed) / 4.0);

                buffer[i][j].rgbtGreen = round((image[i][j].rgbtGreen +
                image[i][j-1].rgbtGreen + image[i+1][j].rgbtGreen +
                image[i+1][j-1].rgbtGreen) / 4.0);

                buffer[i][j].rgbtBlue = round((image[i][j].rgbtBlue +
                image[i][j-1].rgbtBlue + image[i+1][j].rgbtBlue +
                image[i+1][j-1].rgbtBlue) / 4.0);
            }

            //first line, middle pixels
            if (i == 0 && j > 0 && j < width - 1)
            {
                buffer[i][j].rgbtRed = round((image[i][j].rgbtRed +
                image[i][j-1].rgbtRed + image[i][j+1].rgbtRed +
                image[i+1][j].rgbtRed + image[i+1][j-1].rgbtRed +
                image[i+1][j+1].rgbtRed)/ 6.0);

                buffer[i][j].rgbtGreen = round((image[i][j].rgbtGreen +
                image[i][j-1].rgbtGreen + image[i][j+1].rgbtGreen +
                image[i+1][j].rgbtGreen + image[i+1][j-1].rgbtGreen +
                image[i+1][j+1].rgbtGreen)/ 6.0);

                buffer[i][j].rgbtBlue = round((image[i][j].rgbtBlue +
                image[i][j-1].rgbtBlue + image[i][j+1].rgbtBlue +
                image[i+1][j].rgbtBlue + image[i+1][j-1].rgbtBlue +
                image[i+1][j+1].rgbtBlue)/ 6.0);
            }


            //-----------------------------------------

            //last line, first pixel
            if (i == height - 1 && j == 0)
            {
                buffer[i][j].rgbtRed = round((image[i][j].rgbtRed +
                image[i][j+1].rgbtRed + image[i-1][j].rgbtRed +
                image[i-1][j+1].rgbtRed) / 4.0);

                buffer[i][j].rgbtGreen = round((image[i][j].rgbtGreen +
                image[i][j+1].rgbtGreen + image[i-1][j].rgbtGreen +
                image[i-1][j+1].rgbtGreen) / 4.0);

                buffer[i][j].rgbtBlue = round((image[i][j].rgbtBlue +
                image[i][j+1].rgbtBlue + image[i-1][j].rgbtBlue +
                image[i-1][j+1].rgbtBlue) / 4.0);
            }

            //last line, last pixel
            if (i == height - 1 && j == width - 1)
            {
                buffer[i][j].rgbtRed = round((image[i][j].rgbtRed +
                image[i][j-1].rgbtRed + image[i-1][j].rgbtRed +
                image[i-1][j-1].rgbtRed) / 4.0);

                buffer[i][j].rgbtGreen = round((image[i][j].rgbtGreen +
                image[i][j-1].rgbtGreen + image[i-1][j].rgbtGreen +
                image[i-1][j-1].rgbtGreen) / 4.0);

                buffer[i][j].rgbtBlue = round((image[i][j].rgbtBlue +
                image[i][j-1].rgbtBlue + image[i-1][j].rgbtBlue +
                image[i-1][j-1].rgbtBlue) / 4.0);
            }

            //last line, middle pixels
            if (i == height - 1 && j > 0 && j < width - 1)
            {
                buffer[i][j].rgbtRed = round((image[i][j].rgbtRed +
                image[i][j-1].rgbtRed + image[i][j+1].rgbtRed +
                image[i-1][j].rgbtRed + image[i-1][j-1].rgbtRed +
                image[i-1][j+1].rgbtRed) / 6.0);

                buffer[i][j].rgbtGreen = round((image[i][j].rgbtGreen +
                image[i][j-1].rgbtGreen + image[i][j+1].rgbtGreen +
                image[i-1][j].rgbtGreen + image[i-1][j-1].rgbtGreen +
                image[i-1][j+1].rgbtGreen) / 6.0);

                buffer[i][j].rgbtBlue = round((image[i][j].rgbtBlue +
                image[i][j-1].rgbtBlue + image[i][j+1].rgbtBlue +
                image[i-1][j].rgbtBlue + image[i-1][j-1].rgbtBlue +
                image[i-1][j+1].rgbtBlue) / 6.0);
            }

            //------------------------------------------------------

            //middle lines, first pixels
            if (i > 0 && i < height - 1 && j == 0)
            {
                buffer[i][j].rgbtRed = round((image[i][j].rgbtRed +
                image[i][j+1].rgbtRed + image[i+1][j].rgbtRed +
                image[i+1][j+1].rgbtRed + image[i-1][j].rgbtRed +
                image[i-1][j+1].rgbtRed) / 6.0);

                buffer[i][j].rgbtGreen = round((image[i][j].rgbtGreen +
                image[i][j+1].rgbtGreen + image[i+1][j].rgbtGreen +
                image[i+1][j+1].rgbtGreen + image[i-1][j].rgbtGreen +
                image[i-1][j+1].rgbtGreen) / 6.0);

                buffer[i][j].rgbtBlue = round((image[i][j].rgbtBlue +
                image[i][j+1].rgbtBlue + image[i+1][j].rgbtBlue +
                image[i+1][j+1].rgbtBlue + image[i-1][j].rgbtBlue +
                image[i-1][j+1].rgbtBlue) / 6.0);
            }

            //middle lines, last pixels
            if (i > 0 && i < height - 1 && j == width - 1)
            {
                buffer[i][j].rgbtRed = round((image[i][j].rgbtRed +
                image[i][j-1].rgbtRed + image[i+1][j].rgbtRed +
                image[i+1][j-1].rgbtRed + image[i-1][j].rgbtRed +
                image[i-1][j-1].rgbtRed) / 6.0);

                buffer[i][j].rgbtGreen = round((image[i][j].rgbtGreen +
                image[i][j-1].rgbtGreen + image[i+1][j].rgbtGreen +
                image[i+1][j-1].rgbtGreen + image[i-1][j].rgbtGreen +
                image[i-1][j-1].rgbtGreen) / 6.0);

                buffer[i][j].rgbtBlue = round((image[i][j].rgbtBlue +
                image[i][j-1].rgbtBlue + image[i+1][j].rgbtBlue +
                image[i+1][j-1].rgbtBlue + image[i-1][j].rgbtBlue +
                image[i-1][j-1].rgbtBlue) / 6.0);
            }

            //middle lines, middle pixels
            if (i > 0 && i < height - 1 && j > 0 && j < width - 1)
            {
                buffer[i][j].rgbtRed = round((image[i][j].rgbtRed +
                image[i][j-1].rgbtRed + image[i][j+1].rgbtRed +
                image[i+1][j].rgbtRed + image[i+1][j-1].rgbtRed +
                image[i+1][j+1].rgbtRed + image[i-1][j].rgbtRed +
                image[i-1][j-1].rgbtRed + image[i-1][j+1].rgbtRed) / 9.0);

                buffer[i][j].rgbtGreen = round((image[i][j].rgbtGreen +
                image[i][j-1].rgbtGreen + image[i][j+1].rgbtGreen +
                image[i+1][j].rgbtGreen + image[i+1][j-1].rgbtGreen +
                image[i+1][j+1].rgbtGreen + image[i-1][j].rgbtGreen +
                image[i-1][j-1].rgbtGreen + image[i-1][j+1].rgbtGreen) / 9.0);

                buffer[i][j].rgbtBlue = round((image[i][j].rgbtBlue +
                image[i][j-1].rgbtBlue + image[i][j+1].rgbtBlue +
                image[i+1][j].rgbtBlue + image[i+1][j-1].rgbtBlue +
                image[i+1][j+1].rgbtBlue + image[i-1][j].rgbtBlue +
                image[i-1][j-1].rgbtBlue + image[i-1][j+1].rgbtBlue) / 9.0);
            }
        }
    }