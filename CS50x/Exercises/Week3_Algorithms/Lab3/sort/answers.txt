sort1 uses: bubble sort
random5000
real    0m0.063s
user    0m0.051s
sys     0m0.012s

reversed5000
real    0m0.075s
user    0m0.062s
sys     0m0.012s

sorted5000
real    0m0.042s
user    0m0.011s
sys     0m0.011s

How do you know?: I think this algorithm is the bubble sort, because it was much faster tham sort 3 on the sorted case, as well takes no longer time tham the sort 3 case
to sort the reversed and random cases;

sort2 uses: merge sort
random5000
real    0m0.032s
user    0m0.000s
sys     0m0.024s

reversed5000
real    0m0.020s
user    0m0.000s
sys     0m0.020s

sorted5000
real    0m0.019s
user    0m0.005s
sys     0m0.014s

How do you know?: I think this algorithm is the merge sort because was the fastest on the three cases;


sort3 uses: selection sort
random5000
real    0m0.074s
user    0m0.034s
sys     0m0.018s

reversed5000
real    0m0.080s
user    0m0.038s
sys     0m0.021s

sorted5000
real    0m0.070s
user    0m0.031s
sys     0m0.019s


How do you know?: I think this algorithm is the selection sort because was the slowest on the three cases;
